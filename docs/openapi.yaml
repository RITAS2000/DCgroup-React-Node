openapi: 3.1.0
info:
  version: 1.0.0
  title: Recipes app
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: This is a documentation of recipes app

tags:
  - name: Auth
    description: Authentication and registration
  - name: Users
    description: User information
  - name: Categories
    description: Recipe categories
  - name: Ingredients
    description: Ingredients
  - name: Recipes
    description: Recipes

servers:
  - url: http://localhost:3000
  - url: https://dcgroup-react-node-b.onrender.com

paths:
  /api/recipes:
    post:
      $ref: '../swagger/path/recipes/addRecipes.yaml'
  /api/recipes/own:
    get:
      $ref: '../swagger/path/recipes/own/get.yaml'
  /api/recipes/saved-recipes:
    post:
      $ref: '../swagger/path/recipes/postSavedRecipes.yaml'
  /api/recipes/saved-recipes/{recipeId}:
    delete:
      $ref: '../swagger/path/recipes/{id}/deleteSavedRecipe.yaml'

  /api/auth/register:
    post:
      $ref: '../swagger/path/auth/register/post.yaml'

  /api/auth/login:
    post:
      $ref: '../swagger/path/auth/login/post.yaml'

  /api/auth/logout:
    post:
      $ref: '../swagger/path/auth/logout/post.yaml'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RecipeIngredient:
      $ref: ../swagger/components/schemas/RecipeIngredient.yaml

    Recipe:
      $ref: ../swagger/components/schemas/Recipe.yaml
      type: object
      required:
        [
          name,
          decr,
          cookiesTime,
          category,
          ingredients,
          instruction,
          owner,
          createdAt,
        ]
      properties:
        id: { type: string, example: '66b8e6b2f1c8a5f2d1a9c222' }
        name: { type: string, maxLength: 64, example: 'Pasta Carbonara' }
        decr:
          {
            type: string,
            maxLength: 200,
            example: 'Classic Italian pasta with eggs, cheese and pancetta',
          }
        cookiesTime:
          {
            type: integer,
            minimum: 1,
            maximum: 360,
            example: 25,
            description: time in minutes,
          }
        cals: { type: integer, minimum: 1, maximum: 10000, example: 450 }
        category:
          {
            type: string,
            example: '66b8e6b2f1c8a5f2d1a9c777',
            description: ID from the category collection,
          }
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
        instruction:
          {
            type: string,
            maxLength: 1200,
            example: 'Boil pasta, fry pancetta, mix with eggs and cheese...',
          }
        recipeImg:
          {
            type: string,
            format: uri,
            example: 'https://cdn.example.com/images/recipe.jpg',
          }
        owner: { type: string, example: '66b8e6b2f1c8a5f2d1a9c999' }
        createdAt:
          {
            type: string,
            format: date-time,
            example: '2025-08-20T12:34:56.000Z',
          }

    OwnRecipesResponse:
      $ref: ../swagger/components/schemas/OwnRecipesResponse.yaml
