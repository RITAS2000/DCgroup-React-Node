openapi: 3.1.0
info:
  version: 1.0.0
  title: Recipes app
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: This is a documentation of recipes app

tags:
  - name: Auth
    description: Authentication and registration
  - name: Users
    description: User information
  - name: Categories
    description: Recipe categories
  - name: Ingredients
    description: Ingredients
  - name: Recipes
    description: Recipes

servers:
  - url: http://localhost:3000
  - url: https://dcgroup-react-node-b.onrender.com

paths:
  /api/recipes:
    post:
      operationId: createRecipe
      tags: [Recipes]
      summary: Create a new recipe
      description: Private endpoint (JWT). Creates a new user recipe.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../swagger/components/schemas/RecipeInput.yaml
      responses:
        '201':
          description: Recipe created
        '400':
          $ref: ../swagger/components/responses/400.yaml
        '401':
          $ref: ../swagger/components/responses/401.yaml
        '500':
          $ref: ../swagger/components/responses/500.yaml

  /api/recipes/own:
    get:
      operationId: getOwnRecipes
      tags: [Recipes]
      summary: Get current user's own recipes
      description: >
        Returns recipes owned by the current user
        (determined by JWT in the Authorization header).
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number (1..N)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 12
          description: Number of items per page
      responses:
        200:
          description: Successfully found own recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnRecipesResponse'
        401:
          $ref: ../swagger/components/responses/401.yaml
        500:
          $ref: ../swagger/components/responses/500.yaml
  /api/recipes/saved-recipes:
    post:
      $ref: '../swagger/path/recipes/postSavedRecipes.yaml'
  /api/recipes/saved-recipes/{recipeId}:
    delete:
      $ref: '../swagger/path/recipes/{id}/deleteSavedRecipe.yaml'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RecipeIngredient:
      type: object
      required: [ingredient, ingredientAmount]
      properties:
        ingredient:
          type: string
          description: Ingredient ID (one of ingredient collection)
          example: '66b8e6b2f1c8a5f2d1a9c111'
        ingredientAmount:
          type: string
          minLength: 2
          maxLength: 16
          example: '100 g'

    Recipe:
      type: object
      required:
        - name
        - decr
        - cookiesTime
        - category
        - ingredients
        - instruction
        - owner
        - createdAt
      properties:
        id:
          type: string
          example: '66b8e6b2f1c8a5f2d1a9c222'
        name:
          type: string
          maxLength: 64
          example: 'Pasta Carbonara'
        decr:
          type: string
          maxLength: 200
          example: 'Classic Italian pasta with eggs, cheese and pancetta'
        cookiesTime:
          type: integer
          minimum: 1
          maximum: 360
          example: 25
          description: time in minutes
        cals:
          type: integer
          minimum: 1
          maximum: 10000
          example: 450
        category:
          type: string
          example: '66b8e6b2f1c8a5f2d1a9c777'
          description: ID from the category collection
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
        instruction:
          type: string
          maxLength: 1200
          example: 'Boil pasta, fry pancetta, mix with eggs and cheese...'
        recipeImg:
          type: string
          format: uri
          example: 'https://cdn.example.com/images/recipe.jpg'
        owner:
          type: string
          example: '66b8e6b2f1c8a5f2d1a9c999'
        createdAt:
          type: string
          format: date-time
          example: '2025-08-20T12:34:56.000Z'

    OwnRecipesResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Successfully found own recipes!'
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Recipe'
            page:
              type: integer
              example: 1
            perPage:
              type: integer
              example: 12
            totalItems:
              type: integer
              example: 1
            totalPages:
              type: integer
              example: 1
            hasPreviousPage:
              type: boolean
              example: false
            hasNextPage:
              type: boolean
              example: false
