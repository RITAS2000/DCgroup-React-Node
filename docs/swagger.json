{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipes app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of recipes app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://dcgroup-react-node-b.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and registration"
    },
    {
      "name": "Users",
      "description": "User information"
    },
    {
      "name": "Categories",
      "description": "Recipe categories"
    },
    {
      "name": "Ingredients",
      "description": "Ingredients"
    },
    {
      "name": "Recipes",
      "description": "Recipes"
    }
  ],
  "paths": {
    "/api/recipes": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create a new recipe",
        "operationId": "createRecipe",
        "description": "Create and publish a new recipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RecipeInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes/own": {
      "get": {
        "operationId": "getOwnRecipes",
        "tags": [
          "Recipes"
        ],
        "summary": "Get current user's own recipes",
        "description": "Returns recipes owned by the current user (determined by JWT in the Authorization header).\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (1..N)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found own recipes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnRecipesResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes/saved-recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get saved recipes",
        "operationId": "getSavedRecipes",
        "description": "Get all recipes saved (favorite) by the logged-in user with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "User saved recipes fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User saved recipes fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Recipe"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 12
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 50
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add saved recipes",
        "operationId": "addSavedRecipes",
        "description": "Add recipe to saved (favorite) recipes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeId"
                ],
                "properties": {
                  "recipeId": {
                    "description": "Recipe id",
                    "type": "string",
                    "example": "6462a6cd4c3d0ddd28897f92"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe added to saved recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipe added to saved recipes"
                    },
                    "data": {
                      "$ref": "#/components/schemas/RecipeInput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes/saved-recipes/{recipeId}": {
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete recipe by id from favorite",
        "operationId": "deleteSavedRecipe",
        "description": "Delete recipe by id from favorite",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register",
        "operationId": "registerUser",
        "description": "Register a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "Username",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Email",
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "description": "Password",
                    "type": "string",
                    "example": "mypassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-auth"
          },
          "409": {
            "$ref": "#/components/responses/409-auth"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "operationId": "loginUser",
        "description": "Login user with email and password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "Email",
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "description": "Password",
                    "type": "string",
                    "example": "mypassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Access token for authentication",
                          "example": "t2I+B1LDl0DcVBzG058yGmWfWjWaG/l4HXUGhNuI"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "logout",
        "description": "Logs out a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully user logged out"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RecipeIngredient": {
        "type": "object",
        "required": [
          "ingredient",
          "ingredientAmount"
        ],
        "properties": {
          "ingredient": {
            "type": "string",
            "description": "Ingredient ID (one of ingredient collection)",
            "example": "66b8e6b2f1c8a5f2d1a9c111"
          },
          "ingredientAmount": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16,
            "example": "100 g"
          }
        }
      },
      "Recipe": {
        "type": "object",
        "required": [
          "title",
          "description",
          "time",
          "category",
          "ingredients",
          "instructions",
          "owner",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Recipe ObjectId",
            "example": "64628af74c3d0ddd28897fcd"
          },
          "title": {
            "type": "string",
            "maxLength": 64,
            "example": "Battenberg Cake"
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "example": "A classic British cake made with almond sponge cake and covered with marzipan."
          },
          "time": {
            "type": "string",
            "description": "Cooking time in minutes (stored as a string in DB)",
            "example": "60"
          },
          "category": {
            "type": "string",
            "description": "Human-readable category name from DB",
            "example": "Dessert"
          },
          "area": {
            "type": "string",
            "description": "Cuisine/area; optional",
            "example": "British"
          },
          "instructions": {
            "type": "string",
            "maxLength": 1200,
            "example": "Heat oven to 180C/160C fan... line the base and sides..."
          },
          "thumb": {
            "type": "string",
            "format": "uri",
            "description": "Image URL (field name in DB is 'thumb')",
            "example": "https://ftp.goit.study/img/so-yummy/preview/Battenberg%20Cake.jpg"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredient"
            }
          },
          "owner": {
            "type": "string",
            "description": "Owner ObjectId",
            "example": "64c8d958249fae54bae90bb9"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-11T19:25:33.243+00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-03T22:47:51.976+00:00"
          }
        }
      },
      "RecipeInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "example": "Pasta Carbonara"
          },
          "decr": {
            "type": "string",
            "maxLength": 200,
            "example": "Classic Italian pasta with eggs, cheese and pancetta"
          },
          "cookiesTime": {
            "type": "integer",
            "minimum": 1,
            "maximum": 360,
            "example": 25,
            "description": "time in minutes"
          },
          "cals": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10000,
            "example": 450,
            "description": "calories amount"
          },
          "category": {
            "type": "string",
            "description": "ID from category collection",
            "example": "6462a6cd4c3d0ddd28897f8d"
          },
          "ingredients": {
            "oneOf": [
              {
                "type": "array",
                "minItems": 2,
                "maxItems": 16,
                "items": {
                  "$ref": "#/components/schemas/RecipeIngredient"
                }
              },
              {
                "type": "string",
                "description": "JSON stringified array of RecipeIngredient (for multipart/form-data)",
                "example": "[{\"ingredient\":\"640c2dd963a319ea671e37aa\",\"ingredientAmount\":\"100 g\"},\n {\"ingredient\":\"640c2dd963a319ea671e37f5\",\"ingredientAmount\":\"200 g\"}]\n"
              }
            ]
          },
          "instruction": {
            "type": "string",
            "maxLength": 1200,
            "example": "Boil water. Add salt."
          },
          "recipeImg": {
            "type": "string",
            "format": "binary",
            "description": "Recipe image file (max 2MB)"
          }
        },
        "required": [
          "name",
          "decr",
          "cookiesTime",
          "category",
          "ingredients",
          "instruction"
        ]
      },
      "OwnRecipesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfully found own recipes!"
          },
          "data": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipe"
                }
              },
              "page": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 12
              },
              "totalItems": {
                "type": "integer",
                "example": 295
              },
              "totalPages": {
                "type": "integer",
                "example": 25
              },
              "hasPreviousPage": {
                "type": "boolean",
                "example": false
              },
              "hasNextPage": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email"
        ],
        "properties": {
          "_id": {
            "description": "Contact's ID",
            "type": "string",
            "example": "68a622a7cd40d43441c362f1"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "minLength": 3,
            "maxLength": 16,
            "example": "Anastasia"
          },
          "email": {
            "description": "User's email address",
            "type": "string",
            "format": "email",
            "example": "testuser@example.com"
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Recipe created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Recipe created successfully"
                },
                "data": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Id is not valid"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Please provide a valid token"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Recipe not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "400-auth": {
        "description": "Bad Request - invalid email or password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid email or password"
                }
              }
            }
          }
        }
      },
      "409-auth": {
        "description": "Conflict - email already registered",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email is already registered"
                }
              }
            }
          }
        }
      }
    }
  }
}